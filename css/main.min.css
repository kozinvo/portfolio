*,::after,::before{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box}a{text-decoration:none;color:inherit}li,ol,ul{list-style:none}img{vertical-align:top}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}body,html{line-height:1;height:100%}html{scroll-behavior:smooth}body{font:1.375rem "Montserrat",Arial,Helvetica,sans-serif;background:#b4b2b2;color:#21243d}button{background:inherit;cursor:pointer;border:0}button,input,textarea{font:inherit inherit inherit;color:inherit}@font-face{font-family:"Montserrat";src:url(../font/Montserrat-Regular.woff2) format("woff2"),url(../font/Montserrat-Regular.woff) format("woff"),url(../font/Montserrat-Regular.ttf) format("ttf"),url(../font/Montserrat-Regular.eot) format("eot")}.menu-open body{overflow:hidden}.wrapper{overflow:clip;min-height:100%;display:grid;grid-template-rows:auto 1fr auto}[class*=__container]{max-width:91.875rem;padding-inline:.9375rem;margin-inline:auto}section:not(:last-child):not(:first-child){margin-block:80px}.section-title{font-size:40px;margin-bottom:30px}.header{position:sticky;top:0;left:0;width:100%;background:#605f5f}.header__container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;gap:15px;min-height:80px}.header__logo{position:relative;z-index:10}.header__logo img{height:60px}.menu__list{font-size:1.5rem;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-column-gap:40px;-moz-column-gap:40px;column-gap:40px;row-gap:5px;-ms-flex-wrap:wrap;flex-wrap:wrap}.menu__link{position:relative;-webkit-transition:opacity .3s;-o-transition:opacity .3s;transition:opacity .3s}.menu__link::after{position:absolute;content:"";left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);bottom:-5px;display:block;width:0;height:2px;background:#21243d;-webkit-transition:.3s;-o-transition:.3s;transition:.3s}.menu__link:hover{opacity:.7}.menu__link:hover:after{width:100%;opacity:.7}.icon-menu{display:none}.news{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.title{text-transform:uppercase}@media (max-width:797.98px){.menu__list{position:fixed;width:100%;height:100%;top:0;left:-100%;-webkit-transition:left .3s;-o-transition:left .3s;transition:left .3s;padding:100px 15px 20px;background-color:#605f5f;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:35px;overflow:auto}.menu__link{font-size:36px}.menu__link::after{display:none}.menu__link:hover{opacity:1}.menu-open .menu__list{left:0}.icon-menu{display:block;position:relative;z-index:10;width:30px;height:18px}.icon-menu::after,.icon-menu::before,.icon-menu__line{position:absolute;content:"";background-color:#fff;width:100%;height:2px;left:0;-webkit-transition:.3s;-o-transition:.3s;transition:.3s}.icon-menu::before{top:0}.icon-menu::after{bottom:0}.icon-menu__line{top:calc(50% - 1px)}.menu-open .icon-menu::before{top:calc(50% - 1px);-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg)}.menu-open .icon-menu::after{bottom:calc(50% - 1px);-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg)}.menu-open .icon-menu__line{left:50%;width:0}}@media (max-width:700px){body{color:red}.news{color:green}.title{color:#00f}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */